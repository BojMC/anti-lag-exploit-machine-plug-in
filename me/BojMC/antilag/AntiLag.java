package me.BojMC.antilag;

import org.bukkit.plugin.java.*;
import net.md_5.bungee.api.*;
import org.bukkit.plugin.*;
import java.util.*;
import org.bukkit.*;
import org.bukkit.command.*;
import org.bukkit.event.*;
import org.bukkit.entity.*;
import org.bukkit.event.player.*;
import org.bukkit.event.entity.*;

public class AntiLag extends JavaPlugin implements Listener
{
    public String prefix;
    private AntiLag p;
    
    public AntiLag() {
        this.prefix = "ยง6[AntiLag] ยงr>ยง6 ";
    }
    
    public void onEnable() {
        (this.p = this).saveDefaultConfig();
        this.prefix = ChatColor.translateAlternateColorCodes('&', this.getConfig().getString("prefix"));
        Bukkit.getServer().getPluginManager().registerEvents((Listener)this, (Plugin)this);
        Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask((Plugin)this, (Runnable)new TPS(), 100L, 1L);
        Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask((Plugin)this, (Runnable)new Runnable() {
            @Override
            public void run() {
                final List<Entity> ents = new ArrayList<Entity>();
                for (final String s : AntiLag.this.getConfig().getStringList("worlds")) {
                    final World w = Bukkit.getWorld(s);
                    if (w != null) {
                        ents.addAll(w.getEntities());
                    }
                }
                Bukkit.getServer().getScheduler().runTaskAsynchronously((Plugin)AntiLag.this.p, (Runnable)new EntityRemoveCheck(ents, new EntityRemoveCheck.Callback() {
                    @Override
                    public void callback(final Collection<Entity> ents) {
                        new RemoveCountdown(AntiLag.this.p, AntiLag.this.getConfig().getInt("countdown"), ents).runTaskTimer((Plugin)AntiLag.this.p, 10L, 20L);
                    }
                }, false));
            }
        }, (long)this.getConfig().getInt("countdown_cycle"), (long)this.getConfig().getInt("countdown_cycle"));
    }
    
    public boolean onCommand(final CommandSender sender, final Command cmd, final String label, final String[] args) {
        if (cmd.getName().equalsIgnoreCase("antilag")) {
            sender.sendMessage(String.valueOf(this.prefix) + "Well, if you're sure...");
            final List<Entity> ents = new ArrayList<Entity>();
            for (final World w : Bukkit.getServer().getWorlds()) {
                ents.addAll(w.getEntities());
            }
            Bukkit.getServer().getScheduler().runTaskAsynchronously((Plugin)this.p, (Runnable)new EntityRemoveCheck(ents, new EntityRemoveCheck.Callback() {
                @Override
                public void callback(final Collection<Entity> ents) {
                    for (final Entity e : ents) {
                        e.remove();
                    }
                }
            }, true));
            return true;
        }
        return false;
    }
    
    @EventHandler
    public void onPlayerDropItem(final PlayerDropItemEvent e) {
        if (TPS.getTPS() < 10.0) {
            e.setCancelled(true);
        }
    }
    
    @EventHandler
    public void onCreatureSpawn(final CreatureSpawnEvent e) {
        if (e.getSpawnReason().equals((Object)CreatureSpawnEvent.SpawnReason.NATURAL) || e.getSpawnReason().equals((Object)CreatureSpawnEvent.SpawnReason.SPAWNER) || e.getSpawnReason().equals((Object)CreatureSpawnEvent.SpawnReason.REINFORCEMENTS) || e.getSpawnReason().equals((Object)CreatureSpawnEvent.SpawnReason.VILLAGE_INVASION) || e.getSpawnReason().equals((Object)CreatureSpawnEvent.SpawnReason.SLIME_SPLIT)) {
            if (TPS.getTPS() < 14.0) {
                e.setCancelled(true);
            }
        }
        else if (e.getEntityType().equals((Object)EntityType.ENDER_CRYSTAL) && !e.getSpawnReason().equals((Object)CreatureSpawnEvent.SpawnReason.CHUNK_GEN)) {
            e.setCancelled(true);
        }
    }
    
    @EventHandler
    public void onEntityExplode(final EntityExplodeEvent e) {
        if (TPS.getTPS() < 13.0) {
            e.setCancelled(true);
        }
    }
    
    @EventHandler
    public void onPlayerLogin(final PlayerLoginEvent e) {
        if (TPS.getTPS() < 7.0) {
            e.disallow(PlayerLoginEvent.Result.KICK_FULL, "Please try again later");
        }
    }
    
    @EventHandler
    public void onEntityTarget(final EntityTargetEvent e) {
        if (TPS.getTPS() < 15.0) {
            e.setCancelled(true);
        }
    }
}
